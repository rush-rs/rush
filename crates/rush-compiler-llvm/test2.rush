fn ex(mut a: int) -> int {
    a += 2;
    a -= 2;
    a *= 3;
    a /= 3;
    a **= 1;
    let a_bef = a;
    a %= 42;
    a = a_bef;
    a
}


fn fib(n: int) -> int {
    if n < 2 {
        ex(n)
    } else {
        fib(n - 1) + fib(n - 2)
    }
}

fn main() {
    let a = false;

    let _b = if a {
        1
    } else {
        2
    };

    let _fib = fib(44) / 10_000_000;
    let _aa = true as float;
    let _a  = false || !(1 as char as bool) || !(1.0 as char as bool) || 0 ** 100 as bool || exit(_fib);
}
